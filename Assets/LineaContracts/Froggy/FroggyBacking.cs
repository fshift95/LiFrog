//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : MetaMask Unity SDK ABI Code Generator
//   Input filename:  Froggy.sol
//   Output filename: FroggyBacking.cs
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#if UNITY_EDITOR || !ENABLE_MONO
using System;
using System.Numerics;
using System.Threading.Tasks;
using evm.net;
using evm.net.Models;

namespace Froggy
{
	public class FroggyBacking : Contract, Froggy
	{
		public string Address
		{
			get => base.Address;
		}
		public FroggyBacking(IProvider provider, EvmAddress address, Type interfaceType) : base(provider, address, interfaceType)
		{
		}
		[EvmMethodInfo(Name = "burnShot", View = false)]
		public Task<Transaction> BurnShot(EvmAddress _playerAddress, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { _playerAddress, options });
		}
		
		[EvmMethodInfo(Name = "checkPot", View = false)]
		public Task<Transaction> CheckPot()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "entranceFeeAmount", View = false)]
		public Task<Transaction> EntranceFeeAmount(BigInteger newEntranceFee, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { newEntranceFee, options });
		}
		
		[EvmMethodInfo(Name = "payEntranceFee", View = false)]
		public Task<Transaction> PayEntranceFee(EvmAddress senderr, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { senderr, options });
		}
		
		[EvmMethodInfo(Name = "prizeDistributer", View = false)]
		public Task<Transaction> PrizeDistributer()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "setScore", View = false)]
		public Task<Transaction> SetScore(BigInteger score, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { score, options });
		}
		
		[EvmMethodInfo(Name = "setScores", View = false)]
		public Task<Transaction> SetScores(BigInteger score, EvmAddress _playerAddress, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { score, _playerAddress, options });
		}
		
		[EvmMethodInfo(Name = "transferOwnership", View = false)]
		public Task<Transaction> TransferOwnership(EvmAddress newOwner, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Transaction>) InvokeMethod(method, new object[] { newOwner, options });
		}
		
		public Task<Froggy> DeployNew()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Froggy>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighfirstdadd", View = true)]
		public Task<EvmAddress> GetHighfirstdadd()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<EvmAddress>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighFirstScore", View = true)]
		public Task<BigInteger> GetHighFirstScore()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighseconddadd", View = true)]
		public Task<EvmAddress> GetHighseconddadd()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<EvmAddress>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighsecondScore", View = true)]
		public Task<BigInteger> GetHighsecondScore()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHightest", View = true)]
		[return: EvmParameterInfo(Type = "tuple")]
		public Task<Tuple<BigInteger, BigInteger, BigInteger, EvmAddress, EvmAddress, EvmAddress>> GetHightest()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Tuple<BigInteger, BigInteger, BigInteger, EvmAddress, EvmAddress, EvmAddress>>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighthirdadd", View = true)]
		public Task<EvmAddress> GetHighthirdadd()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<EvmAddress>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getHighthirdScore", View = true)]
		public Task<BigInteger> GetHighthirdScore()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getPlayerScore", View = true)]
		public Task<BigInteger> GetPlayerScore(EvmAddress _playerAddress, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] { _playerAddress, options });
		}
		
		[EvmMethodInfo(Name = "getPlayerShots", View = true)]
		public Task<BigInteger> GetPlayerShots(EvmAddress _playerAddress, CallOptions options = default)
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] { _playerAddress, options });
		}
		
		[EvmMethodInfo(Name = "getPotSetTime", View = true)]
		public Task<BigInteger> GetPotSetTime()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getPubBalance", View = true)]
		public Task<BigInteger> GetPubBalance()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getPubState", View = true)]
		[return: EvmParameterInfo(Type = "tuple")]
		public Task<Tuple<BigInteger, BigInteger>> GetPubState()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<Tuple<BigInteger, BigInteger>>) InvokeMethod(method, new object[] {  });
		}
		
		[EvmMethodInfo(Name = "getTotalStokenBalance", View = true)]
		public Task<BigInteger> GetTotalStokenBalance()
		{
			var method = System.Reflection.MethodBase.GetCurrentMethod();
			return (Task<BigInteger>) InvokeMethod(method, new object[] {  });
		}
		
	}
}
#endif
